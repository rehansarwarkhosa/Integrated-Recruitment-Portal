# schema.graphql

# type Query {
#   getNotifications(_user_id: String!, _name: String!): [message_log]
#   getLogs: [message_log]
# }

# type message_log {
#   guid: ID!
#   name: String!
#   source: String!
#   created_at: String!
#   status_code: Int!
#   kind_of_user: String!
#   user_id: String!
#   component: String!
#   message: String!
#   message_type: String!
#   message_metadata: String!
#   description: String!
#   no_of_tries: Int!
#   is_notification: Boolean!
#   is_read: Boolean!
# }

# type Mutation {
#   addLog(
#     name: String!
#     source: String!
#     status_code: Int!
#     kind_of_user: String!
#     user_id: String!
#     component: String!
#     message: String!
#     message_type: String!
#     message_metadata: String!
#     description: String!
#     no_of_tries: Int!
#     is_notification: Boolean
#     is_read: Boolean
#   ): message_log
# }

#-------------------------------------------------------------

scalar Upload
scalar JSON

# type out_CompanyEmployeeList {
#   user_id: ID
#   first_name: String
#   designation: String
#   department: String
#   mobile_no: String
# }

# type out_geocode {
#   latitude: String
#   longitude: String
#   location: String
# }

type Query {
  # signin(user_id: ID!): out_UserActivationStatus
  # signin: Boolean

  signin(email: String!, password: String!): JSON

  renewToken(token: String!): JSON

  AllJobs(skip: Int!, take: Int!): [Jobs]
  SeachAllJobsByJobTitle(job_title: String!): [Jobs]

  TotalNumberOfJobs: Int

  JobByJobID(job_id: Int!): Jobs

  JobSeekerFAQs: JSON

  EmployerFAQs: JSON

  AllAgencyJobPosts(skip: Int!, take: Int!): [AgencyJobPosts]
  TotalNumberOfAgencyPostedJobs: Int

  AgencyJobPostByAgencyJobPostID(agency_job_post_job_id: Int!): AgencyJobPosts

  GetAgencyJobPostTemplates: [AgencyJobPosts]

  DropdownRequirements: [AgencyJobPostRequirements]
  DropdownSkills: [AgencyJobPostskills]

  SearchAgencyPostedJobByJobTitle(job_title: String!): [AgencyJobPosts]

  SearchAgencyPostedJobByJobTitleLocationDistance(
    job_title: String
    location: String
    distance: Int
  ): [AgencyJobPosts]

  SearchAgencyPostedJobBySectorAndEmploymentType(
    job_sector: String!
    employment_type: String!
    skip: Int
    take: Int
  ): [AgencyJobPosts]

  geocode(address: String!): out_geocode
  addressList(address: String!): [String]

  AllCandidatesWithoutJobLink(skip: Int!, take: Int!): [Candidates]
  TotalNumberOfCandidatesWithoutJobLink: Int

  AllCandidatesWithJobLink(skip: Int!, take: Int!): [Candidates]
  TotalNumberOfCandidatesWithJobLink: Int

  GetCandidateWithoutJobLinkByCandidateID(candidate_id: Int!): Candidates

  GetCandidateWithJobLinkByCandidateID(candidate_id: Int!): Candidates
  # isCompanyNameExist(company_name: String!): Boolean

  # geocode(address: String!): out_geocode
  # addressList(address: String!): [String]

  # JobSummary(user_id: ID!, job_id: ID!, company_id: ID!): return_Job

  # CompanyEmployeeList(user_id: ID!, company_id: ID!): [out_CompanyEmployeeList]

  # Dashboard(user_id: ID!): Dashboard

  # subscription_planList: [subscription_planList]
  # inActiveEmployerList(user_id: ID!): [Company]
  # IsCompanyActive(user_id: ID!, company_id: ID!): Boolean

  # fillDropdowns: String

  # channelList: [out_channelList]
  # addressTypeList: [out_addressTypeList]
  # industryTypeList: [out_industryTypeList]

  # projectStatus: [out_projectStatus]

  # contact_typeList: [out_contact_typeList]
  # role_typeList: [out_role_typeList]
  # salary_typeList: [out_salary_typeList]
  # designationList(company_id: ID!): [out_designationList]
  # departmentList(company_id: ID!): [out_departmentList]

  # courseList: [out_course]
  # document_statuses_list: [out_document_statuses]
  # course_typeList: [out_course_type]
  # education_levelList: [out_education_level]
  # institute_universityList: [out_institute_university]
  # skillList: [out_skill]
  # CompanyProfile(user_id: ID!, company_id: ID!): Company

  # EmployeeProfile(user_id: ID!): out_User_Employee_Profile

  # listJobsByUserID(user_id: ID!): [job]
  # JobByJobID(user_id: ID!, job_id: ID!): job

  # getProjectManagersByUserID(user_id: ID!): [out_ProjectManagers]

  # getdesignationsByUserID(user_id: ID!): [out_designations]

  # getTeamByDesignation(
  #   user_id: ID!
  #   designation: [input_designation!]!
  # ): [out_TeamByDesignations]

  # AllProject: [project]

  # ProjectByUserID(user_id: ID!): [project]

  # getProjectTeamByProjectID(
  #   user_id: ID!
  #   project_id: ID!
  # ): [out_getProjectTeamByProjectID]

  # task_priority: [out_task_priority]

  # getTeamUsersByTeamID(user_id: ID!, team_id: ID!): [out_getTeamUsersByTeamID]

  # piechart(id: ID!): PieChart
  # incidents: [Incident!]!
  # incident(id: ID!, userId: ID!): Incident
  # incidentByOwner(id: ID!, is_submitted: Boolean!): [incidentByOwner]
  # incidentByOwnerTriage(id: ID!, is_submitted: Boolean!): [incidentByOwner]

  # businessOwners(userId: ID!): [outBusinessOwners]
  # contactReferences(userId: ID!): [outContactReferences]

  # businessOwnersById(incidentId: ID!, userId: ID!): [outBusinessOwners]
  # contactReferencesById(incidentId: ID!, userId: ID!): [outContactReferences]
  # assigneeList(userId: ID!): [outAssigneeList]

  # statusEC2(region: String!): [statusEC2]

  # users: [User!]!
  # user(id: ID!): User!
  # priorities: [Priority!]!
  # severities: [Severity!]!
  # severity(id: ID!): Severity
  # components: [Components]
  # transferChains: [TransferChain]
  # applicationStatuses: [ApplicationStatus!]!
  # workflowStages: [WorkflowStage!]!
  # intakeChannels: [IntakeChannel!]!
  # documents: [Document!]!
  # document(id: ID!): Document
  # tags: [Tag!]!
  # notificationTypes: [NotificationType!]!
  # notifications: [Notification!]!
  # assetTypes: [AssetType!]!
  # assetReferences: [AssetReference!]!
  # incidentAssets: [IncidentAsset!]!
  # incidentContacts: [IncidentContact!]!

  # jiraReferences: [JiraReference!]!
  # communicationTypes: [CommunicationType!]!
}

type Mutation {
  # signin: Boolean

  contactUs(
    first_name: String!
    last_name: String!
    email: String!
    phone_number: String
    message: String!
  ): JSON

  signup(email: String!, password: String!): JSON

  Test(Name: String!): JSON

  AddJob(
    company_name: String!
    company_logo: Upload
    company_details_phone_number: String!
    website_link: String
    address: String!
    employment_type: String!
    city: String!
    state: String!
    country: String!
    zip_code: String!
    # -----------------------
    first_name: String!
    middle_name: String
    last_name: String!
    email: String!
    company_admin_contact_number: String!
    # -----------JoB Description------------
    # title: String!
    # category: String!
    # description: String!
    # salary: Float!
    # no_of_resources_required: Int!
    # experience: String!
    # job_type: String!
    # required_qualification: String!
    # start_date: String!
    # expiry_date: String!

    # must_to_have_skills: [String!]!
    # nice_to_have_skills: [String!]!
    # additional_skills: [String]
    # job_location: String!
    # additional_requirements: [String]

    # Sir moe changes start
    job_title: String

    job_type: String!
    additional_details: String
    no_of_resources_required: String

    job_description_file: Upload # safety_shoes: Boolean # requirements: [String!]! # Sir moe changes end # language: String! # # country: String! # # company_name: String! # location: String! # job_title: String! # job_sector: String! # job_description: String! # required_qualification: String! # safety_gloves: Boolean # safety_jacket: Boolean # start_date: String # start_time: String # start_time_zone: String # end_time: String # end_time_zone: String # pay_rate: Float # pay_rate_currency: String # no_of_resources_required: Int # skills: [String] # job_description_file: Upload
  ): JSON

  ApplyJob(
    agency_job_post_job_id: Int!
    first_name: String!
    middle_name: String
    last_name: String!
    email: String!
    phone_number: String!
    city: String!
    job_sector: String!
    resume: Upload!
  ): JSON

  ApplyWithoutJob(
    first_name: String!
    middle_name: String
    last_name: String!
    email: String!
    phone_number: String!
    city: String!
    job_sector: String!
    resume: Upload!
  ): JSON

  AddJobSeekerFAQ(question: String!, answer: String!): JSON

  AddEmployerFAQ(question: String!, answer: String!): JSON

  UpdateAgencyJobPostPriority(
    agency_job_post_job_id: Int!
    priority: Int!
  ): JSON

  AgencyJobPost(
    job_id: Int
    language: String!
    country: String!
    employment_type: String!

    company_name: String!
    location: String!

    working_location: String
    job_title: String!

    job_description: String!
    job_sector: String!

    required_qualification: String
    requirements: [String]
    skills: [String]

    no_of_resources_required: Int!

    start_date: String
    start_time: String
    start_time_zone: String
    end_time: String
    end_time_zone: String
    pay_rate: Float
    pay_rate_currency: String

    priority: Int

    safety_shoes: Boolean
    safety_gloves: Boolean
    safety_jacket: Boolean

    save_as_a_template: Boolean
  ): JSON

  UpdateAgencyJobPost(
    agency_job_post_job_id: Int!

    language: String!
    country: String!
    employment_type: String!

    company_name: String!
    location: String!

    working_location: String
    job_title: String!

    job_description: String!
    job_sector: String!

    required_qualification: String
    requirements: [String]
    skills: [String]

    no_of_resources_required: Int!

    start_date: String
    start_time: String
    start_time_zone: String
    end_time: String
    end_time_zone: String
    pay_rate: Float
    pay_rate_currency: String

    priority: Int

    safety_shoes: Boolean
    safety_gloves: Boolean
    safety_jacket: Boolean

    save_as_a_template: Boolean
  ): JSON

  DeleteJobSeekerFAQByID(guid: ID!): JSON
  DeleteEmployerFAQByID(guid: ID!): JSON

  DeleteAgencyPostedJobByID(agency_job_post_job_id: Int!): JSON

  DeleteJobByID(job_id: Int!): JSON

  DeleteCandidateByID(candidate_id: Int!): JSON

  # fillDropdowns: String

  # CreateProject(
  #   user_id: String!
  #   project_name: String!
  #   project_status_id: String
  #   industry_type_id: ID
  #   company_name: String!
  #   project_start_date: String
  #   project_end_date: String
  #   project_manager_id: ID
  #   project_details: String
  #   # company_id: String!
  #   work_location: InputWorklocation!
  #   work_documents: [Upload]
  #   teams: [InputTeams]
  # ): Boolean

  # AddTask(
  #   user_id: String!
  #   team_id: String!
  #   task_priority_id: String
  #   task_definition: String!
  #   is_project_location: Boolean!
  #   work_location: InputWorklocation
  #   task_manager_id: ID
  #   task_start_date: String
  #   task_end_date: String
  #   salary: Float
  #   company_name: String
  #   task_user: [TaskUser]!
  # ): Boolean

  # GetPaymentIntent(
  #   user_id: ID!
  #   receipt_email: String!
  #   amount: String!
  #   description: String
  # ): return_GetPaymentIntent

  # JobInitiation(
  #   user_id: ID!
  #   company_id: String!
  #   job_title: String!
  #   experience_required: Int!
  #   education_level_id: ID!
  #   job_description: String!
  #   skills_or_related_experience: String!
  #   training_or_certificate: String
  # ): return_JobID

  # JobPreferences(
  #   user_id: ID!
  #   company_id: String!
  #   job_id: ID!
  #   is_specific_address: Boolean!
  #   is_remote_work: Boolean!
  #   address: Address_For_Job_Posting
  #   recieve_through_email: Boolean!
  #   recieve_through_walkin: Boolean!
  #   walkin_start_date: String!
  #   walkin_end_date: String!
  #   is_resume_required: Boolean!
  # ): return_JobID

  # JobGeneralInformation(
  #   user_id: ID!
  #   company_id: String!
  #   job_id: ID!
  #   job_types: String!
  #   no_of_working_hours: Int
  #   working_hour_type: String
  #   job_schedules: String!
  #   is_job_start_date: Boolean
  #   job_start_date: String
  #   will_job_expire: Boolean
  #   job_expiry_date: String
  #   no_of_candidates: Int
  #   candidate_relocation_required: Boolean
  #   relocation_provided_by_company: Boolean
  #   job_contacts: [Job_Contact]
  # ): return_JobID

  # JobSalaryInformation(
  #   user_id: ID!
  #   company_id: String!
  #   job_id: ID!
  #   currency: String
  #   minimum_salary: Float
  #   maximum_salary: Float
  #   supplimental_pays: String
  #   other_benefits: String
  # ): return_JobID

  # addNewDepartmentForCompany(
  #   user_id: ID!
  #   company_id: String!
  #   title: String!
  # ): String

  # addNewDesignationForCompany(
  #   user_id: ID!
  #   company_id: String!
  #   title: String!
  # ): String

  # selectSubscriptionPlanForCompany(
  #   user_id: ID!
  #   company_id: ID!
  #   subscription_id: ID!
  # ): Company
  # toActiveCompany(user_id: ID!, company_id: ID!, status: Boolean!): Company

  # signup(
  #   user_name: String!
  #   is_employer: Boolean!
  #   first_name: String
  #   last_name: String
  #   email: String!
  #   mobile_no: String!

  #   company_name: String
  #   GST_number: String
  # ): User

  # DeleteCompanyEmployee(
  #   user_id: ID!
  #   company_employee_user_id: ID!
  #   company_id: String!
  #   is_active: Boolean!
  # ): String

  # DeleteCompany(
  #   user_id: ID!
  #   company_id: String!
  #   is_company_approved: Boolean!
  # ): String

  # AddCompanyEmployee(
  #   user_id: ID!
  #   company_employee_user_id: ID
  #   company_id: String!
  #   # ------------------
  #   profile_picture: Upload
  #   name: String!
  #   designation: String!
  #   department: String!
  #   reports_to: String!
  #   date_of_joining: String
  #   role: String!
  #   email: String!
  #   salary: Float
  #   salary_type: String
  #   working_days: String
  #   is_active: Boolean
  #   send_activation_email: Boolean
  #   #--------------------
  #   CompanyEmployee_Emails: [CompanyEmployeeEmails]
  #   CompanyEmployee_ContactNos: [CompanyEmployeeContactNos]
  #   channels: [ChannelTypeWithURL]
  #   CompanyEmployee_EmergencyContact: [CompanyEmployeeEmergencyContact]
  #   CompanyEmployee_Address: [CompanyEmployeeAddress]
  #   CompanyEmployee_Documents: [CompanyEmployeeDocuments]
  # ): [out_AddCompanyEmployee]

  # # [out_AddCompanyEmployee]

  # # CompanyDetails(
  # #   user_id: ID!
  # #   company_id: String!
  # #   company_name: String!
  # #   GST_number: String
  # #   corporation_no: String
  # #   # about_us: String!
  # #   emails: [String]!
  # #   contact_nos: [String]!
  # #   channels: [ChannelTypeWithURL]!
  # #   addresses: [Address]!
  # # ): String

  # # verifyBySMS(user_id: ID!, is_mobile_verified: Boolean!): User

  # # verifyByEmail(user_id: ID!, is_email_verified: Boolean!): User

  # CompanyPortfolio(
  #   user_id: ID!
  #   company_id: String!
  #   images: [Upload]!
  #   videos: [Upload]!
  # ): [out_CompanyPortfolio]

  # CompanyBasicDetails(
  #   user_id: ID!
  #   company_id: String!
  #   about_us: String!
  #   industry_type_id: ID!
  #   documents: [Upload]!
  # ): String

  # AddInactiveCompanyDetails(
  #   user_id: ID!
  #   company_id: String!
  #   company_name: String!
  #   GST_number: String
  #   status: Boolean!
  #   # email: String!
  #   # mobile_no: String!
  #   documents: [InactiveCompanyDetailsDocuments]!
  # ): [out_AddInactiveCompanyDetails]

  # deleteCompanyDocument(
  #   user_id: ID!
  #   company_id: ID!
  #   company_document_id: ID!
  # ): String

  # deleteEmployeeDocument(user_id: ID!, user_document_id: ID!): String

  # deleteCompanyPortfolio(user_id: ID!, company_id: ID!, guid: ID!): String

  # multipleFileUploadTest(file: [Upload!]!): Boolean
  # singleFileUploadTest(user_id: ID!, file: Upload!): String

  # EmployeePersonalDetails(
  #   user_id: ID!

  #   profile_picture: Upload

  #   first_name: String!
  #   middle_name: String
  #   last_name: String!
  #   gender: String!
  #   date_of_birth: String!
  #   social_security_no: String

  #   emails: [String]!
  #   contact_nos: [String]!
  #   channels: [ChannelTypeWithURL]!
  #   emergency_contact_details: EmergencyContactDetails!
  #   addresses: [Address]!
  # ): String

  # EmployeePortfolio(
  #   user_id: ID!

  #   images: [Upload]!
  #   videos: [Upload]!
  # ): [out_EmployeePortfolio]

  # deleteEmployeePortfolio(user_id: ID!, guid: ID!): String

  # EmployeeEducation(
  #   user_id: ID!
  #   education_level: String!
  #   course: String!
  #   course_type: String!
  #   university_institute: String!
  #   passing_year: String!
  #   specialization: String!
  #   skills: [input_skill!]!
  #   industry_type_id: ID!
  #   resume: Upload
  #   note: String
  #   documents: [EmployeeEducationDocuments]!
  # ): [out_EmployeeEducation]

  # AddNewSkill(user_id: ID!, skill_name: String!): skill

  # addIncident(
  #   title: String!
  #   description: String!
  #   jiraReference: String
  #   projectReference: String
  #   incidentTriageOwner: String
  #   version: Float
  #   notificationsEnabled: Boolean
  #   impactDescription: String
  #   completionTimestamp: String
  #   alertingDate: String
  #   clientDepartment: String
  #   notificationTargetId: String
  #   tagId: String
  #   dueDate: String
  #   severityId: String!
  #   incidentOwner: ID!
  #   incidentBusinessOwner: String
  #   additionalContactReference: String
  #   intakeChannelId: String
  #   priorityId: String
  #   stageId: String
  #   statusId: String
  #   createdBy: String
  #   createdAt: String
  #   updatedBy: String
  #   updatedAt: String
  #   deletedBy: String
  #   deletedAt: String
  #   file: [Upload]
  # ): IncidentwithFile

  # addIncidentWithFileArray(
  #   title: String
  #   description: String
  #   jiraReference: String
  #   projectReference: String
  #   incidentTriageOwner: String
  #   version: Float
  #   notificationsEnabled: Boolean
  #   impactDescription: String
  #   completionTimestamp: String
  #   alertingDate: String
  #   clientDepartment: String
  #   notificationTargetId: String
  #   tagId: String
  #   dueDate: String
  #   severityId: String
  #   incidentBusinessOwner: String
  #   additionalContactReference: String
  #   intakeChannelId: String
  #   priorityId: String
  #   stageId: String
  #   statusId: String
  #   createdBy: String
  #   createdAt: String
  #   updatedBy: String
  #   updatedAt: String
  #   deletedBy: String
  #   deletedAt: String
  #   is_submitted: Boolean!
  #   file: [FileFromComposite]
  #   businessOwners: [businessOwners]
  #   contactReferences: [contactReferences]
  #   userInfo: userInfo!
  # ): IncidentwithFile

  # updateIncidentWithFileArray(
  #   title: String
  #   description: String
  #   jiraReference: String
  #   projectReference: String
  #   incidentTriageOwner: String
  #   version: Float
  #   notificationsEnabled: Boolean
  #   impactDescription: String
  #   completionTimestamp: String
  #   alertingDate: String
  #   clientDepartment: String
  #   notificationTargetId: String
  #   tagId: String
  #   dueDate: String
  #   severityId: String
  #   incidentBusinessOwner: String
  #   additionalContactReference: String
  #   intakeChannelId: String
  #   priorityId: String
  #   stageId: String
  #   statusId: String
  #   createdBy: String
  #   createdAt: String
  #   updatedBy: String
  #   updatedAt: String
  #   deletedBy: String
  #   deletedAt: String
  #   is_submitted: Boolean!
  #   file: [FileFromComposite]

  #   businessOwners: [businessOwners]
  #   contactReferences: [contactReferences]

  #   userId: ID!
  #   incidentId: ID!

  #   orignalEstimate: String
  #   actualEstimate: String
  #   availableFromEstimate: String
  #   assignee: String

  #   components: [ID]
  #   transferChain: [String]
  # ): IncidentwithFile

  # deleteNewlyCreatedIncident(
  #   userId: ID!
  #   IncidentId: String!
  # ): deleteNewlyCreatedIncident

  # startAndStopEC2(
  #   instanceId: ID!
  #   region: String!
  #   option: String!
  # ): startAndStopEC2

  # deleteIncident(userId: ID!, IncidentId: String!): deleteIncident

  # deleteAllDraftIncident(userId: ID!): deleteAllDraftIncident

  # deleteMultipleDraftIncident(
  #   incidentIds: [ID!]!
  #   ownerId: ID!
  # ): deleteAllDraftIncident

  # deleteDocument(documentId: ID!, incidentId: ID!, ownerId: ID!): deleteDocument

  # addNote(
  #   incidentId: ID!
  #   userId: ID!
  #   title: String!
  #   description: String!
  # ): Note

  # addUser(
  #   userId: String!
  #   firstName: String
  #   middleName: String
  #   lastName: String
  #   emailId: String!
  #   real_estate_id: String
  # ): User

  # addSeverity(
  #   shortDescription: String!
  #   description: String!
  #   displayOrder: Int!
  #   createdBy: String!
  # ): Severity

  # sendEmail(
  #   incidentId: String!
  #   userId: String!
  #   from_email: String
  #   to_email: String
  #   cc_email: String
  #   subject: String
  #   message: String
  #   is_delivered: Boolean
  #   response_metadata: String
  #   file: [FileFromComposite]
  # ): Email

  # sendSMS(
  #   incidentId: String!
  #   userId: String!
  #   to_phone: String!
  #   message: String!
  #   is_delivered: Boolean
  #   response_metadata: String
  # ): SMS

  # Document(
  #   incidentId: String!
  #   documentFileTypeId: String
  #   fileName: String
  #   isDeleted: String
  #   shortDescription: String
  #   description: String
  #   metadata: String
  #   fileSize: String
  #   ownerId: String
  #   resourceUrl: String
  #   createdBy: String
  #   createdAt: String
  #   updatedBy: String
  #   updatedAt: String
  #   deletedBy: String
  # ): Document

  # singleUpload(file: Upload!): File!
}

# type out_getProjectTeamByProjectID {
#   guid: String
#   team_name: String
# }

# type out_getTeamUsersByTeamID {
#   guid: String
#   team_id: String
#   user_id: String
#   teams: teams
#   user: out_User_Employee_Profile
# }

# type teams {
#   guid: String
#   project_id: String
#   team_name: String
#   # tasks    :  tasks
#   # team_user : team_user
# }

# type out_task_priority {
#   priority_id: String
#   short_description: String
#   dispaly_order: Int
# }

# # pproject
# type project {
#   guid: String
#   project_name: String
#   industry_type_id: String
#   company_name: String
#   project_start_date: String
#   projecr_end_date: String
#   project_manager_id: String
#   project_details: String
#   company_id: String
#   project_status_id: String
#   company: Company
#   industry_type: industry_type
#   project_status: project_status
#   project_documents: [project_documents]
#   tasks: [tasks]
# }

type out_geocode {
  latitude: String
  longitude: String
  location: String
}

type Jobs {
  job_id: Int
  company_name: String
  company_logo: String
  company_details_phone_number: String
  website_link: String
  address: String
  city: String
  state: String
  country: String
  zip_code: String
  employment_type: String

  first_name: String
  middle_name: String
  last_name: String
  email: String
  company_admin_contact_number: String

  # Replace by:
  # language: String
  # country: String
  # company_name: String
  # location: String

  # job_title: String
  # job_sector: String
  # job_description: String
  # required_qualification: String

  # start_date: String
  # start_time: String
  # start_time_zone: String
  # end_time: String
  # end_time_zone: String
  # pay_rate: Float
  # pay_rate_currency: String
  # no_of_resources_required: Int

  job_title: String
  job_type: String
  additional_details: String

  no_of_resources_required: String
  job_description_file: String

  # safety_shoes: Boolean
  # safety_gloves: Boolean
  # safety_jacket: Boolean

  # job_description_file: String
  is_posted: Boolean

  # is_active: Boolean
  is_deleted: Boolean
  deleted_at: String
  created_at: String
  updated_at: String

  # candidates: [Candidates]

  # jobMustToHaveSkills: [JobMustToHaveSkills]
  # jobNiceToHaveSkills: [JobNiceToHaveSkills]
  # jobAdditionalSkills: [JobAdditionalSkills]
  # jobAdditionalRequirements: [JobAdditionalRequirements]

  # jobRequirements: [JobRequirements]
  # jobSkills: [JobSkills]
}

# type JobRequirements {
#   guid: String
#   job_id: String
#   description: String
# }

# type JobSkills {
#   guid: String
#   job_id: String
#   description: String
# }

# type JobMustToHaveSkills {
#   guid: String
#   job_id: String
#   description: String
# }

# type JobNiceToHaveSkills {
#   guid: String
#   job_id: String
#   description: String
# }

# type JobAdditionalSkills {
#   guid: String
#   job_id: String
#   description: String
# }

# type JobAdditionalRequirements {
#   guid: String
#   job_id: String
#   description: String
# }

type Candidates {
  candidate_id: Int
  agency_job_post_job_id: Int
  first_name: String
  middle_name: String
  last_name: String
  email: String
  phone_number: String
  city: String
  job_sector: String
  resume: String
  is_job_link: Boolean

  is_deleted: Boolean
  deleted_at: String
  created_at: String
  updated_at: String
}

type AgencyJobPosts {
  agency_job_post_job_id: Int
  job_id: Int
  employment_type: String
  language: String
  country: String
  company_name: String
  location: String
  working_location: String
  job_title: String
  job_sector: String
  job_description: String
  required_qualification: String

  start_date: String
  start_time: String
  start_time_zone: String
  end_time: String
  end_time_zone: String
  pay_rate: Float
  pay_rate_currency: String
  no_of_resources_required: Int

  save_as_a_template: Boolean

  is_deleted: Boolean
  deleted_at: String
  created_at: String
  updated_at: String

  latitude: Float
  longitude: Float
  priority: Int

  safety_shoes: Boolean
  safety_gloves: Boolean
  safety_jacket: Boolean

  candidates: [Candidates]
  agencyJobPostRequirements: [AgencyJobPostRequirements]
  agencyJobPostskills: [AgencyJobPostskills]

  job: Jobs
}

type AgencyJobPostRequirements {
  guid: String
  agency_job_post_job_id: Int
  description: String
}

type AgencyJobPostskills {
  guid: String
  agency_job_post_job_id: Int
  description: String
}

# type tasks {
#   guid: String
#   project_id: String
#   task_start_date: String
#   task_end_date: String
#   task_priority: String
#   task_definition: String
#   team_id: String
#   task_manager_id: String
#   salary: Float
#   is_project_location: Boolean
#   # project         :    project
#   teams: teams
# }

# type teams {
#   guid: String
#   project_id: String
#   team_name: String
#   # tasks    :  [tasks]
#   team_user: [team_user]
# }

# type team_user {
#   guid: String
#   team_id: String
#   user_id: String
#   # teams: teams
#   user: out_User_Employee_Profile
# }

# type project_status {
#   guid_: String
#   short_description: String
# }

# type project_documents {
#   guid: String
#   project_id: String
#   document_url: String
#   file_name: String
#   extension: String
#   description: String
# }

# type out_ProjectManagers {
#   user_id: String
#   company_id: String
#   designation: String
#   first_name: String
#   middle_name: String
#   last_name: String
# }

# type out_designations {
#   user_id: String
#   company_id: String
#   designation: String
# }

# type out_TeamByDesignations {
#   user_id: String
#   company_id: String
#   designation: String
#   first_name: String
#   middle_name: String
#   last_name: String
# }

# type return_GetPaymentIntent {
#   clientSecret: String
#   id: String
# }

# type return_JobID {
#   job_id: String
# }

# type Dashboard {
#   inactive_companies: Int
#   active_companies: Int
#   total_companies: Int
# }

# type out_contact_typeList {
#   contact_type_id: String
#   title: String
# }
# type out_role_typeList {
#   role_type_id: String
#   title: String
# }
# type out_salary_typeList {
#   salary_type_id: String
#   title: String
# }
# type out_designationList {
#   designation_id: String
#   title: String
# }
# type out_departmentList {
#   department_id: String
#   title: String
# }

# type subscription_planList {
#   subscription_id: String
#   subscription_name: String
#   price: Float
# }

# type out_channelList {
#   channel_id: String
#   channel_name: String
# }

# type out_addressTypeList {
#   guid: String
#   address_type_name: String
# }

# type out_industryTypeList {
#   guid: String
#   industry_type_name: String
# }

# type out_projectStatus {
#   guid_: String
#   short_description: String
# }

# type out_course {
#   guid: String
#   short_description: String
# }

# type out_document_statuses {
#   guid: String
#   status: String
# }

# type out_course_type {
#   guid: String
#   short_description: String
# }

# type out_education_level {
#   guid: String
#   short_description: String
# }

# type out_institute_university {
#   guid: String
#   short_description: String
# }

# type out_skill {
#   skill_id: String
#   skill_name: String
# }

# input Job_Contact {
#   phone_number: String
#   designation: String
#   name: String
#   email: String
# }

# input input_designation {
#   designation: String
# }

# type User {
#   user_id: String
#   user_name: String
#   company_id: String
#   is_employer: Boolean
#   designation_id: String
#   first_name: String
#   last_name: String
#   email: String
#   mobile_no: String
#   is_active: Boolean
#   is_deleted: Boolean
#   deleted_at: String
#   created_at: String
#   updated_at: String
#   is_email_verified: Boolean
#   is_mobile_verified: Boolean

#   company_name: String
#   GST_number: String
# }

# # --------------- Start Employee Query

# type out_User_Employee_Profile {
#   user_id: String
#   user_name: String
#   company_id: String
#   is_employer: Boolean
#   designation: String
#   first_name: String
#   last_name: String
#   email: String
#   mobile_no: String
#   is_active: Boolean
#   is_deleted: Boolean
#   deleted_at: String
#   created_at: String
#   updated_at: String
#   is_email_verified: Boolean
#   is_mobile_verified: Boolean
#   is_agency_user: Boolean
#   created_by: String
#   updated_by: String
#   deleted_by: String
#   middle_name: String
#   social_security_no: String
#   date_of_birth: String
#   gender: String
#   profile_picture: String
#   last_login: String

#   #  new fileds for company employee
#   department: String
#   date_of_joining: String
#   working_days: String
#   send_activation_email: Boolean
#   salary: Float
#   salary_type: String
#   role: String
#   reports_to: String
#   # End company employee fields

#   # company                company

#   user_address: [user_address]
#   user_channel: [user_channel]
#   user_contact: [user_contact]
#   user_document: [user_document]
#   user_eductaion: [user_eductaion]
#   user_email: [user_email]
#   user_emergency_contact: [user_emergency_contact]
#   user_portfolio: [user_portfolio]
#   user_skill: [user_skill]
# }

# type user_address {
#   guid: String
#   country: String
#   province: String
#   city: String
#   postal_zip_code: String
#   street_no: String
#   created_at: String
#   updated_at: String
#   deleted_at: String
#   is_deleted: Boolean
#   user_id: String
#   address_type_id: String
#   address_type: address_type
# }

# type user_channel {
#   guid: String
#   user_id: String
#   channel_id: String
#   url: String
#   created_at: String
#   updated_at: String
#   deleted_at: String
#   is_deleted: Boolean

#   channel: channel
# }

# type user_contact {
#   user_contact_id: String
#   user_id: String
#   created_at: String
#   updated_at: String
#   deleted_at: String
#   is_deleted: Boolean
#   contact_no: String
#   contact_type: String
#   contact_extension: String
# }

# type user_document {
#   user_document_id: String
#   document_url: String
#   extension: String
#   user_id: String
#   filename: String
#   description: String
#   is_image: Boolean
#   status: String
# }

# type user_eductaion {
#   guid: String
#   education_level: String
#   course: String
#   course_type: String
#   university_institute: String
#   passing_year: String
#   specialization: String
#   note: String
#   resume: String
#   resume_filename: String
#   industry_type_id: String
#   user_id: String

#   industry_type: industry_type
# }

# type user_email {
#   user_email_id: String
#   user_id: String
#   created_at: String
#   updated_at: String
#   deleted_at: String
#   is_deleted: Boolean
#   email: String
#   email_department: String
#   is_primary: Boolean
# }

# type user_emergency_contact {
#   guid: String
#   user_id: String
#   name: String
#   relationship: String
#   email: String
#   mobile: String
#   created_at: String
#   updated_at: String
# }

# type user_portfolio {
#   guid: String
#   user_id: String
#   url: String
#   is_image: Boolean
#   created_at: String
#   updated_at: String
#   deleted_at: String
#   is_deleted: Boolean
#   filename: String
# }

# type user_skill {
#   user_skill_id: String
#   skill_id: String
#   user_id: String

#   skill: skill
# }

# type skill {
#   skill_id: String
#   skill_name: String
# }

# # --------------- End Employee Query

# input CompanyEmployeeDocuments {
#   document: Upload!
#   description: String!
# }

# input EmployeeEducationDocuments {
#   document: Upload!
#   description: String!
# }

# input InactiveCompanyDetailsDocuments {
#   document: Upload!
#   description: String!
#   status: String!
# }

# input CompanyEmployeeEmergencyContact {
#   name: String!
#   relationship: String!
#   mobile: String!
#   email: String
# }

# type out_UserActivationStatus {
#   is_active: Boolean
#   is_deleted: Boolean
#   is_email_verified: Boolean
#   is_mobile_verified: Boolean
# }

# input ChannelTypeWithURL {
#   channel_id: String!
#   url: String!
# }

# input input_skill {
#   skill_id: String!
#   skill_name: String!
# }

# input Address {
#   address_type_id: String!
#   street_no: String
#   country: String!
#   province: String!
#   city: String!
#   postal_zip_code: String!
# }

# input Address_For_Job_Posting {
#   street_no: String
#   country: String!
#   province: String!
#   city: String!
#   postal_zip_code: String!
# }

# input CompanyEmployeeAddress {
#   # address_type_id: String!   Context: Address type id mandatory to optional
#   street_no: String
#   country: String!
#   province: String!
#   city: String!
#   postal_zip_code: String!
# }

# input InputWorklocation {
#   # address_type_id: String!   Context: Address type id mandatory to optional
#   street_no: String!
#   building: String
#   city: String
#   country: String!
#   postal_zip_code: String!
#   additional_location_details: String
# }

# input InputTeams {
#   # address_type_id: String!   Context: Address type id mandatory to optional
#   team_name: String!
#   user_id: ID!
# }

# input TaskUser {
#   # address_type_id: String!   Context: Address type id mandatory to optional
#   task_id: ID!
#   user_id: ID!
# }

# input EmergencyContactDetails {
#   name: String!
#   relationship: String
#   mobile: String!
#   email: String
# }

# input CompanyEmployeeEmails {
#   email_department: String!
#   email: String!
#   # is_primary: Boolean!
# }

# input CompanyEmployeeContactNos {
#   contact_type: String!
#   contact_extension: String!
#   contact_no: String!
#   is_primary: Boolean!
# }

# type out_CompanyPortfolio {
#   guid: String
#   url: String
#   is_image: Boolean
# }

# type out_EmployeeEducation {
#   user_document_id: String
#   url: String
#   is_image: Boolean
#   filename: String
#   description: String
# }

# type out_AddCompanyEmployee {
#   user_document_id: String
#   url: String
#   is_image: Boolean
#   filename: String
#   description: String
# }

# type out_AddInactiveCompanyDetails {
#   company_document_id: String
#   url: String
#   is_image: Boolean
#   filename: String
#   description: String
#   status: String
# }

# type out_EmployeePortfolio {
#   guid: String
#   url: String
#   is_image: Boolean
# }

# # ---------------------------Schema---------------------

# type Company {
#   company_id: String!
#   company_name: String
#   GST_number: String
#   corporation_no: String
#   about_us: String
#   industry_type_id: String
#   is_company_approved: Boolean

#   subscription_id: String
#   is_payment_done: Boolean

#   created_at: String
#   updated_at: String

#   company_address: [company_address]
#   company_channel: [company_channel]
#   company_contact_no: [company_contact_no]
#   company_document: [company_document]
#   company_email: [company_email]
#   company_portfolio: [company_portfolio]
#   # user                [user]
#   industry_type: industry_type
# }

# type company_address {
#   guid: String
#   country: String
#   province: String
#   city: String
#   postal_zip_code: String
#   street_no: String
#   created_at: String
#   updated_at: String
#   deleted_at: String
#   is_deleted: Boolean
#   company_id: String
#   address_type_id: String
#   address_type: address_type
# }

# type company_channel {
#   guid: String
#   company_id: String
#   channel_id: String
#   url: String
#   created_at: String
#   updated_at: String
#   deleted_at: String
#   is_deleted: Boolean

#   channel: channel
# }

# type company_contact_no {
#   guid: String
#   contact_no: String
#   is_primary: Boolean
#   created_at: String
#   updated_at: String
#   deleted_at: String
#   is_deleted: Boolean
#   company_id: String
# }

# type company_document {
#   company_document_id: String
#   document_url: String
#   extension: String
#   filename: String
#   company_id: String
#   is_image: Boolean
#   description: String
#   status: String
# }

# type company_email {
#   guid: String
#   email: String
#   is_primary: Boolean
#   created_at: String
#   updated_at: String
#   deleted_at: String
#   is_deleted: Boolean
#   company_id: String
# }

# type company_portfolio {
#   guid: String
#   company_id: String
#   url: String
#   filename: String
#   is_image: Boolean
#   created_at: String
#   updated_at: String
#   deleted_at: String
#   is_deleted: Boolean
# }

# type address_type {
#   guid: String
#   address_type_name: String
# }

# type industry_type {
#   guid: String
#   industry_type_name: String
#   created_at: String
#   updated_at: String
#   deleted_at: String
#   is_deleted: Boolean
# }

# type channel {
#   channel_id: String
#   channel_name: String
#   created_at: String
#   updated_at: String
#   deleted_at: String
#   is_deleted: Boolean
# }

# type education_level {
#   guid: String
#   short_description: String
# }

# type job {
#   job_id: ID
#   job_title: String
#   created_at: String
#   updated_at: String
#   is_active: Boolean
#   job_description: String
#   experience_required: Int
#   education_level_id: String
#   training_or_certificate: String
#   is_specific_address: Boolean
#   is_remote_work: Boolean
#   recieve_through_email: Boolean
#   recieve_through_walkin: Boolean
#   walkin_start_date: String
#   walkin_end_date: String
#   is_resume_required: Boolean
#   user_id: String
#   skills_or_related_experience: String
#   education_level: education_level
# }

# type return_Job {
#   job_id: String
#   job_title: String
#   created_at: String
#   updated_at: String
#   is_active: Boolean
#   job_description: String
#   experience_required: Int
#   education_level_id: String
#   training_or_certificate: String
#   is_specific_address: Boolean
#   is_remote_work: Boolean
#   recieve_through_email: Boolean
#   recieve_through_walkin: Boolean
#   walkin_start_date: String
#   walkin_end_date: String
#   is_resume_required: Boolean
#   user_id: String
#   skills_or_related_experience: String
#   is_job_start_date: Boolean
#   job_start_date: String
#   no_of_working_hours: Int
#   minimum_salary: Float
#   maximum_salary: Float
#   currency: String
#   wage_frequency: String
#   no_of_candidates: Int
#   candidate_relocation_required: Boolean
#   relocation_provided_by_company: Boolean
#   other_benefits: String
#   supplimental_pays: String
#   job_types: String
#   job_schedules: String
#   job_expiry_date: String
#   will_job_expire: Boolean
#   working_hour_type: String
# }

# # type startAndStopEC2 {
# #   message: String
# # }

# # type statusEC2 {
# #   Id: ID
# #   Name: String
# #   State: String
# #   Type: String
# #   LaunchTime: String
# # }

# # type Email {
# #   emailId: ID
# #   incidentId: ID
# #   userId: ID
# #   from_email: String
# #   to_email: String
# #   cc_email: String
# #   subject: String
# #   message: String
# #   is_delivered: Boolean
# #   response_metadata: String
# #   createdAt: String

# #   filepath: [String]
# #   numOfFiles: Int
# # }

# # type Emails {
# #   emailId: ID
# #   incidentId: ID
# #   userId: ID
# #   from_email: String
# #   to_email: String
# #   cc_email: String
# #   subject: String
# #   message: String
# #   is_delivered: Boolean
# #   response_metadata: String
# #   createdAt: String
# #   emailDocuments: [EmailDocument]
# # }

# # type EmailDocument {
# #   documentId: ID
# #   emailId: Int
# #   documentFileTypeId: String
# #   fileName: String
# #   fileSize: String
# #   ownerId: String
# #   resourceUrl: String
# #   createdAt: String
# # }

# # type SMS {
# #   smsId: ID
# #   incidentId: ID
# #   userId: ID
# #   to_phone: String
# #   message: String
# #   is_delivered: Boolean
# #   response_metadata: String
# #   createdAt: String
# # }

# # type Note {
# #   noteId: ID
# #   incidentId: ID
# #   userId: ID
# #   title: String
# #   description: String
# #   updatedBy: String
# #   updatedAt: String
# #   deletedBy: String
# #   deletedAt: String
# # }

# # type File {
# #   filename: String!
# #   mimetype: String!
# #   encoding: String!
# #   filepath: [String]!
# # }

# # type deleteNewlyCreatedIncident {
# #   noOfIncidents: Int!
# # }

# # type deleteIncident {
# #   noOfIncidents: Int!
# # }

# # type deleteAllDraftIncident {
# #   noOfIncidents: Int!
# # }

# # type deleteDocument {
# #   noOfDocuments: Int!
# # }

# # input FileFromComposite {
# #   filename: String!
# #   documentFileTypeId: String!
# #   fileSize: String!
# #   resourceUrl: String!
# # }

# # input businessOwners {
# #   firstName: String
# #   middleName: String
# #   lastName: String
# #   profilePicture: String
# #   emailId: String
# #   telephoneNumber: String
# #   mobilePhone: String
# #   role: String
# #   company: String
# #   companyAddress: String
# # }

# # type outBusinessOwners {
# #   businessOwnerId: ID
# #   incidentId: ID
# #   userId: ID
# #   firstName: String
# #   middleName: String
# #   lastName: String
# #   profilePicture: String
# #   emailId: String
# #   telephoneNumber: String
# #   mobilePhone: String
# #   role: String
# #   company: String
# #   companyAddress: String
# # }

# # input contactReferences {
# #   firstName: String
# #   middleName: String
# #   lastName: String
# #   profilePicture: String
# #   emailId: String
# #   telephoneNumber: String
# #   mobilePhone: String
# #   role: String
# #   company: String
# #   companyAddress: String
# #   is_businessOwner: String
# # }

# # type outContactReferences {
# #   contactReferenceId: ID
# #   incidentId: ID
# #   userId: ID
# #   firstName: String
# #   middleName: String
# #   lastName: String
# #   profilePicture: String
# #   emailId: String
# #   telephoneNumber: String
# #   mobilePhone: String
# #   role: String
# #   company: String
# #   companyAddress: String
# #   is_businessOwner: String
# # }

# # type outAssigneeList {
# #   userId: String
# #   firstName: String
# #   middleName: String
# #   lastName: String
# #   profilePicture: String
# #   emailId: String
# #   telephoneNumber: String
# #   mobilePhone: String
# #   real_estate_id: String
# #   userType: String
# #   createdAt: String
# # }

# # input userInfo {
# #   email: String!
# #   user_id: ID!
# #   first_name: String!
# #   middle_name: String
# #   last_name: String!
# #   real_estate_id: ID
# # }

# # type Incident {
# #   incidentId: ID!
# #   title: String
# #   description: String
# #   jiraReference: String
# #   projectReference: String
# #   incidentTriageOwner: String
# #   version: Float
# #   notificationsEnabled: Boolean
# #   impactDescription: String
# #   completionTimestamp: String
# #   alertingDate: String
# #   clientDepartment: String
# #   notificationTargetId: String
# #   tagId: String
# #   dueDate: String
# #   severityId: String
# #   incidentOwner: ID
# #   incidentBusinessOwner: String
# #   additionalContactReference: String

# #   intakeChannelId: String
# #   priorityId: String
# #   stageId: String
# #   statusId: String
# #   createdBy: String
# #   createdAt: String
# #   updatedBy: String
# #   updatedAt: String
# #   deletedBy: String
# #   deletedAt: String
# #   is_submitted: Boolean

# #   documents: [Document]
# #   components: [Components]
# #   businessOwners: [outBusinessOwners]
# #   contactReferences: [outContactReferences]
# #   transferChains: [TransferChain]
# #   emails: [Emails]
# #   SMSs: [SMS]
# #   notes: [Note]

# #   severity: Severity
# #   orignalEstimate: String
# #   actualEstimate: String
# #   availableFromEstimate: String
# #   assignee: String
# # }

# # type PieChart {
# #   DRAFT: Int
# #   Submitted: Int
# #   Received: Int
# #   TRIAGE_Outstanding: Int
# #   In_TRIAGE: Int
# #   TRIAGE_Complete: Int
# #   Total: Int
# # }

# # type incidentByOwner {
# #   incidentId: ID!
# #   title: String!
# #   description: String!
# #   jiraReference: String
# #   projectReference: String
# #   incidentTriageOwner: String
# #   version: Float
# #   notificationsEnabled: Boolean
# #   impactDescription: String
# #   completionTimestamp: String
# #   alertingDate: String
# #   clientDepartment: String
# #   notificationTargetId: String
# #   tagId: String
# #   dueDate: String
# #   severityId: String!
# #   incidentOwner: ID!
# #   incidentBusinessOwner: String
# #   additionalContactReference: String

# #   documents: [Document]
# #   components: [Components]
# #   businessOwners: [outBusinessOwners]
# #   contactReferences: [outContactReferences]
# #   transferChains: [TransferChain]

# #   emails: [Emails]
# #   SMSs: [SMS]

# #   notes: [Note]

# #   intakeChannelId: String
# #   priorityId: String
# #   stageId: String
# #   statusId: String
# #   createdBy: String
# #   createdAt: String
# #   updatedBy: String
# #   updatedAt: String
# #   deletedBy: String
# #   deletedAt: String

# #   severity: Severity
# #   orignalEstimate: String
# #   actualEstimate: String
# #   availableFromEstimate: String
# #   assignee: String
# #   is_submitted: Boolean
# # }

# # type incidentByOwnerTriage {
# #   incidentId: ID!
# #   title: String!
# #   description: String!
# #   jiraReference: String
# #   projectReference: String
# #   incidentTriageOwner: String
# #   version: Float
# #   notificationsEnabled: Boolean
# #   impactDescription: String
# #   completionTimestamp: String
# #   alertingDate: String
# #   clientDepartment: String
# #   notificationTargetId: String
# #   tagId: String
# #   dueDate: String
# #   severityId: String!
# #   incidentOwner: ID!
# #   incidentBusinessOwner: String
# #   additionalContactReference: String

# #   documents: [Document]
# #   components: [Components]
# #   businessOwners: [outBusinessOwners]
# #   contactReferences: [outContactReferences]
# #   transferChains: [TransferChain]

# #   emails: [Emails]
# #   SMSs: [SMS]

# #   notes: [Note]

# #   intakeChannelId: String
# #   priorityId: String
# #   stageId: String
# #   statusId: String
# #   createdBy: String
# #   createdAt: String
# #   updatedBy: String
# #   updatedAt: String
# #   deletedBy: String
# #   deletedAt: String

# #   severity: Severity
# #   orignalEstimate: String
# #   actualEstimate: String
# #   availableFromEstimate: String
# #   assignee: String
# #   is_submitted: Boolean
# # }

# # type IncidentwithFile {
# #   incidentId: ID
# #   title: String
# #   description: String
# #   jiraReference: String
# #   projectReference: String
# #   incidentTriageOwner: String
# #   version: Float
# #   notificationsEnabled: Boolean
# #   impactDescription: String
# #   completionTimestamp: String
# #   alertingDate: String
# #   clientDepartment: String
# #   notificationTargetId: String
# #   tagId: String
# #   dueDate: String
# #   severityId: String
# #   incidentOwner: ID
# #   incidentBusinessOwner: String
# #   additionalContactReference: String
# #   documents: [Document]
# #   intakeChannelId: String
# #   priorityId: String
# #   stageId: String
# #   statusId: String
# #   createdBy: String
# #   createdAt: String
# #   updatedBy: String
# #   updatedAt: String
# #   deletedBy: String
# #   deletedAt: String
# #   numOfFiles: Int
# #   is_submitted: Boolean
# #   filepath: [String]
# # }

# # type Priority {
# #   priorityId: ID
# #   shortDescription: String
# #   description: String
# #   color: String
# #   displayOrder: Int
# #   createdBy: String
# #   createdAt: String
# #   updatedBy: String
# #   updatedAt: String
# #   deletedBy: String
# #   deletedAt: String
# # }

# # type Severity {
# #   severityId: ID
# #   shortDescription: String
# #   description: String
# #   displayOrder: Int
# #   createdBy: String
# #   createdAt: String
# #   updatedBy: String
# #   updatedAt: String
# #   deletedBy: String
# #   deletedAt: String
# # }

# # type ApplicationStatus {
# #   statusId: ID
# #   shortDescription: String
# #   description: String
# #   displayOrder: Int
# #   createdBy: String
# #   createdAt: String
# #   updatedBy: String
# #   updatedAt: String
# #   deletedBy: String
# #   deletedAt: String
# # }
# # type WorkflowStage {
# #   stageId: ID
# #   shortDescription: String
# #   description: String
# #   displayOrder: Int
# #   createdBy: String
# #   createdAt: String
# #   updatedBy: String
# #   updatedAt: String
# #   deletedBy: String
# #   deletedAt: String
# # }

# # type IntakeChannel {
# #   intakeChannelId: ID
# #   shortDescription: String
# #   Description: String
# #   displayOrder: Int
# #   createdBy: String
# #   createdAt: String
# #   updatedBy: String
# #   updatedAt: String
# #   deletedBy: String
# #   deletedAt: String
# # }

# # type Document {
# #   documentId: ID
# #   incidentId: ID
# #   documentFileTypeId: String
# #   fileName: String
# #   isDeleted: String
# #   shortDescription: String
# #   description: String
# #   metadata: String
# #   fileSize: String
# #   ownerId: String
# #   resourceUrl: String
# #   createdBy: String
# #   createdAt: String
# #   updatedBy: String
# #   updatedAt: String
# #   deletedBy: String
# #   deletedAt: String
# # }

# # type Components {
# #   componentId: ID
# #   incidentId: ID
# #   tagId: ID
# #   createdBy: String
# #   createdAt: String
# #   updatedBy: String
# #   updatedAt: String
# #   deletedBy: String
# #   deletedAt: String
# #   isDeleted: Boolean
# #   tag: Tag
# # }

# # type TransferChain {
# #   Name: String
# #   incidentId: ID
# #   createdBy: String
# #   createdAt: String
# #   updatedBy: String
# #   updatedAt: String
# #   deletedBy: String
# #   deletedAt: String
# #   isDeleted: Boolean
# # }

# # type Tag {
# #   tagId: ID
# #   shortDescription: String
# #   description: String
# #   displayOrder: Int
# #   createdBy: String
# #   createdAt: String
# #   updatedBy: String
# #   updatedAt: String
# #   deletedBy: String
# #   deletedAt: String
# # }

# # type NotificationType {
# #   notificationTypeId: ID
# #   shortDescription: String
# #   description: String
# #   displayOrder: Int
# #   createdBy: String
# #   createdAt: String
# #   updatedBy: String
# #   updatedAt: String
# #   deletedBy: String
# #   deletedAt: String
# # }

# # type Notification {
# #   notificationId: String
# #   incidentId: String
# #   userId: String
# #   topicReferenceId: String
# #   isRead: String
# #   isDispatched: String
# #   shortDescription: String
# #   description: String
# #   linkToDetailUrlReference: String
# #   imageUrlReference: String
# #   subjectUrlReference: String
# #   timeToLiveInSeconds: String
# #   isActive: String
# #   gpsCoordinateLatitude: String
# #   gpsCoordinateLongitude: String
# #   priority: String
# #   hostSystem: String
# #   port: String
# #   senderId: String
# #   senderMetadata: String
# #   silentNotification: String
# #   playSoundReference: String
# #   smallIconUrlReference: String
# #   applicationModuleReference: String
# #   additionalMessageBody: String
# #   transmissionErrorDescription: String
# #   isEncrypted: String
# #   encryptionSecret: String
# #   sourceId: String
# #   notificationTypeId: String
# #   createdBy: String
# #   createdAt: String
# #   updatedBy: String
# #   updatedAt: String
# #   deletedBy: String
# #   deletedAt: String
# # }

# # type AssetType {
# #   assetTypeId: ID
# #   shortDescription: String
# #   description: String
# #   displayOrder: Int
# #   createdBy: String
# #   createdAt: String
# #   updatedBy: String
# #   updatedAt: String
# #   deletedBy: String
# #   deletedAt: String
# # }

# # type AssetReference {
# #   assetId: ID
# #   shortDescription: String
# #   description: String
# #   department: String
# #   ownerName: String
# #   siteName: String
# #   group: String
# #   categoryReference: String
# #   createdBy: String
# #   createdAt: String
# #   updatedBy: String
# #   updatedAt: String
# #   deletedBy: String
# #   deletedAt: String
# # }

# # type IncidentContact {
# #   incidentContactId: ID
# #   incidentId: String
# #   contactReferenceId: String
# #   createdBy: String
# #   createdAt: String
# #   updatedBy: String
# #   updatedAt: String
# #   deletedBy: String
# #   deletedAt: String
# # }
# # type ContactReference {
# #   contactReferenceId: ID
# #   contactName: String
# #   contactTelephone: String
# #   contactEmail: String
# #   userId: String
# #   createdBy: String
# #   createdAt: String
# #   updatedBy: String
# #   updatedAt: String
# #   deletedBy: String
# #   deletedAt: String
# # }

# # type IncidentAsset {
# #   incidentId: ID
# #   assetId: String
# #   createdBy: String
# #   createdAt: String
# #   updatedBy: String
# #   updatedAt: String
# #   deletedBy: String
# #   deletedAt: String
# # }

# # type JiraReference {
# #   jiraReferenceId: String
# #   jiraIssueNumber: String
# #   jiraEpicReference: String
# #   reporter: String
# #   assignee: String
# #   priority: String
# #   version: String
# #   originalEstimate: String
# #   actualEstimate: String
# #   incidentId: String
# #   createdBy: String
# #   createdAt: String
# #   updatedBy: String
# #   updatedAt: String
# #   deletedBy: String
# #   deletedAt: String
# # }

# # type CommunicationType {
# #   communicationTypeId: String
# #   shortDescription: String
# #   description: String
# #   noteNoteId: String
# #   createdBy: String
# #   createdAt: String
# #   updatedBy: String
# #   updatedAt: String
# #   deletedBy: String
# #   deletedAt: String
# # }
